# Spring: Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true

# Spring: PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://postgresql:5432/project_management_system_auth_service_db
spring.datasource.username=project_management_system_auth_service_user
spring.datasource.password=project_management_system_auth_service_password

# Spring Cloud: Eureka Configuration
eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka

# Spring Cloud: Eureka Instance Configuration
eureka.instance.instance-id=${spring.application.name}:${server.port}:${random.uuid}

# Project Management System: Kafka
project-management-system.kafka.server=kafka:9092
project-management-system.kafka.topic.names=user-details-creation, user-details-creation-failed, user-details-deletion, user-details-deletion-failed
project-management-system.kafka.topic.partitions=3
project-management-system.kafka.topic.replication-factor=1

# AWS IAM User Access
aws.iam.user.accessKey={cipher}b0354b5b1d7e61ffb06406f995e49e608f638b7a06a288e2c7849278bbe827dcde07656a8778cd7631d2d4be8bb859bb
aws.iam.user.secretKey={cipher}c25a45e64cb02dd81bd16767b9939459bb9075f4e26bf4b28cc2f311061238604e448a1791d78f2bbbde80a0eb188da4220a973149090687ee25ce3913eb03f5

# AWS Secrets Manager
aws.secretsmanager.secretName.project-management-system-security-private-public-keys=project-management-system-security-private-public-keys
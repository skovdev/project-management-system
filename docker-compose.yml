services:
  postgresql:
    image: postgresql-db
    deploy:
        replicas: 1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: ["postgres", "-c", "max_connections=170"]
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - project-management-system-network

  service-discovery:
    image: service-discovery-1.0
    deploy:
      replicas: 1
    ports:
      - "8761:8761"
    networks:
        - project-management-system-network

  config-server:
    image: config-server-1.0
    deploy:
      replicas: 1
    ports:
      - "8888:8888"
    networks:
      - project-management-system-network

  api-gateway:
    image: api-gateway-1.0
    deploy:
      replicas: 1
    environment:
      CONFIG_SERVER_HOST: config-server
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8762:8762"
    depends_on:
      - service-discovery
      - config-server
    entrypoint: ../wait-for-it.sh config-server:8888 --timeout=20 -- java -jar api-gateway-1.0.jar
    networks:
      - project-management-system-network

  auth-service:
    image: auth-service-1.0
    deploy:
      replicas: 3
    environment:
      CONFIG_SERVER_HOST: config-server
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - service-discovery
      - config-server
      - api-gateway
      - postgresql
      - kafka
    entrypoint: ../wait-for-it.sh config-server:8888 --timeout=20 -- java -jar auth-service-1.0.jar
    networks:
      - project-management-system-network

  user-service:
    image: user-service-1.0
    deploy:
      replicas: 3
    environment:
      CONFIG_SERVER_HOST: config-server
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - service-discovery
      - config-server
      - api-gateway
      - postgresql
      - kafka
    entrypoint: ../wait-for-it.sh config-server:8888 --timeout=20 -- java -jar user-service-1.0.jar
    networks:
      - project-management-system-network

  project-service:
    image: project-service-1.0
    deploy:
      replicas: 3
    environment:
      CONFIG_SERVER_HOST: config-server
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - service-discovery
      - config-server
      - api-gateway
      - postgresql
      - kafka
    entrypoint: ../wait-for-it.sh config-server:8888 --timeout=20 -- java -jar project-service-1.0.jar
    networks:
      - project-management-system-network

  task-service:
    image: task-service-1.0
    deploy:
      replicas: 3
    environment:
      CONFIG_SERVER_HOST: config-server
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - service-discovery
      - config-server
      - api-gateway
      - postgresql
      - kafka
    entrypoint: ../wait-for-it.sh config-server:8888 --timeout=20 -- java -jar task-service-1.0.jar
    networks:
      - project-management-system-network

  kafka:
    image: wurstmeister/kafka:latest
    deploy:
      replicas: 1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
        - project-management-system-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    deploy:
      replicas: 1
    ports:
      - "2181:2181"
    networks:
        - project-management-system-network

  app-client:
    image: app-client-1.0
    deploy:
      replicas: 1
    ports:
      - "4200:4200"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm start
    networks:
      - project-management-system-network

networks:
  project-management-system-network:
    driver: overlay

volumes:
  pg_data: